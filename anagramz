#include<conio.h>
#include<iostream>
#include<string>
#include<fstream>
using namespace std;
struct node
{
	string strSto;
	string alphado;
	node* next;
};
void main()
{
	char ministorage;
	string storage="";
	node *firstest, *lastest, *newest = new node;
	firstest = lastest = newest;
	newest->next = NULL;
	ifstream in;
	in.open("anaDict.txt");
	while (!in.eof())			//enter file into linked list, parse for non-letter characters
	{
		ministorage = in.get();
		if ((ministorage >= 65 && ministorage <= 90) || (ministorage >= 97 && ministorage <= 122))
			storage += tolower(ministorage);
		else if (storage.length() > 0)
		{
			lastest->strSto = storage;
			newest = new node;
			lastest->next = newest;
			lastest = newest;
			lastest->next = NULL;
			storage = "";
		}
	}
	if (storage != "")
	{
		lastest->strSto = storage;
		newest = new node;
		lastest->next = newest;
		lastest = newest;
		lastest->next = NULL;
	}

	node *stor=firstest;
	while (stor->next!=NULL)
	{
		stor->alphado = stor->strSto;
		bool flag = false;
		while (flag == false)
		{
			flag = true;
			if(stor->alphado.length()>1)
			for (int count = 0; count < stor->alphado.length() - 2; count++)
			{
				if (stor->alphado[count] > stor->alphado[count + 1])
				{
					swap(stor->alphado[count], stor->alphado[count + 1]);
					flag = false;
				}
			}
		}
		stor = stor->next;
	}

	bool flag = false;
	while (flag == false)
	{
		flag = true;
		if (stor->alphado.length() > 1)
		for (int count = 0; count < stor->alphado.length() - 2; count++)
		{
			if (stor->alphado[count] > stor->alphado[count + 1])
			{
				swap(stor->alphado[count], stor->alphado[count + 1]);
				flag = false;
			}
		}
	}

	flag = false;
	while (flag = false)
	{
		flag = true;
		stor = firstest;
		while (stor->next != NULL)
		{
			if (stor->next->alphado > stor->alphado)
			{
				swap(stor->alphado, stor->next->alphado);
				flag = false;
			}
		}
	}
	in.close();
	_getch();
}
